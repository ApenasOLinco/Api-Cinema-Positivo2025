CREATE TABLE IF NOT EXISTS Ator (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    nome VARCHAR(35) NOT NULL,
    dataNasc DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS Diretor (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    nome VARCHAR(35) NOT NULL,
    dataNasc DATE NOT NULL,
    biografia VARCHAR(150) NOT NULL
);

CREATE TABLE IF NOT EXISTS Filme (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    titulo VARCHAR(50) NOT NULL,
    anoLancamento INT UNSIGNED NOT NULL,
    sinopse VARCHAR(130) NOT NULL,
    notaIMDB DECIMAL NOT NULL,
    diretorId INTEGER NOT NULL,
    FOREIGN KEY (diretorId) REFERENCES Diretor (id)
);

CREATE TABLE IF NOT EXISTS Avaliacao (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    filmeId INTEGER NOT NULL,
    autor VARCHAR(35) DEFAULT 'An√¥nimo',
    estrelas DECIMAL NOT NULL,
    resenha VARCHAR(150) NOT NULL,
    FOREIGN KEY (filmeId) REFERENCES Filme (id)
);

CREATE TABLE IF NOT EXISTS Genero (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    nome VARCHAR(25) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Filme_Ator (
    filmeId INTEGER NOT NULL,
    atorId INTEGER NOT NULL,
    papel VARCHAR(50),
    PRIMARY KEY (filmeId, atorId),
    FOREIGN KEY (filmeId) REFERENCES Filme (id),
    FOREIGN KEY (atorId) REFERENCES Ator (id)
);

CREATE TABLE IF NOT EXISTS Filme_Genero (
    filmeId INTEGER NOT NULL,
    generoId INTEGER NOT NULL,
    PRIMARY KEY (filmeId, generoId),
    FOREIGN KEY (filmeId) REFERENCES Filme (id),
    FOREIGN KEY (generoId) REFERENCES Genero (id)
);